[作業履歴]
2023/05/22: 
H-000: index.htmlのコメントを開発メモ.txtに移した
H-011: char-def.html に直線を定義したはずだがなくなっている？
H-004: Pixel.getAnimationPixelDataの戻り値はcanvasでなくてimageDataでよい
H-021: Pixel.getAnimationPixelData の色指定がうまく動作するか調べる
H-024: Pixel.getAnimationPixelData の色のaは 0-255 の方がよいかもしれない
H-019: やらない -> 点を消すときに乱数を複数回発生させて、それを透明度とするのはどうだろうか(10回中7回成功なら 255 * 7 / 10とする)
H-025: Pixel.getAnimationPixelData で indexesArray を作成する関数を設ける
H-026: Pixel.getAnimationPixelData で引数が増えてきたので、引数をoptionの1つにする
H-022: Pixel.getAnimationPixelData の色の除去は結局どうするか調べる -> フラグにより乱数か0か選べるようにする
H-028: index.html の行列を合わせる
H-031: 設定内容を増やしたい(sigma, length)
H-030: 設定内容を保存したい index.html
H-032: lengthをpps(px per second)に直したい
H-027: index.html で getAnimationPixelData でアニメーションさせたい

2023/05/23:
H-035: app-svg.jsを作成
H-037: H-036の前にselectの元を全部配列にする
H-036: 設定内容を当面使いそうなので、settings.jsを作成する
H-039: fpsもsettingsに入れる
H-038: 色をsettingsに入れる
H-039: H-032をやっつけるために my-chalk.html に setting.js を組み込む
H-032: ppsを上げると表示がおかしくなる。恐らく線分で区切るロジックがおかしい
H-042: getAnimationPixelDataでチョークの位置を返すようにする

2023/05/24:
H-033: アニメーションに手を付ける
H-043: 画の間、文字の間は手のみを動かす

2023/05/25:
H-014-1: 台形描画関数を作成する
H-XXX: チョークの色のα値を190にした
H-045: アニメーション完了フラグを作成する
H-007: 1の直線が開始点に3つ重なっていたのが気になった
H-009: AVGのダウンロードと読み込み
H-050: ファイルの保存
H-051: 音声合成を少し動かす - debug.htmlで読み上げなど実装
XML Tool インストール -> Shift + Alt + F で整形
H-053: \ (半角スペース)で落ちる不具合を修正。原因<path>にd が定義されないケースがあった
H-054: {\bf f}(未定義文字)で落ちる -> data が作成できない場合
H-055: SVG読み込み時にセーブする
H-052: chalkboard.html は削除でよい
H-055: MinMaxのsave,restoreはスタックを使うように修正する
H-030: {x\over xy}12 でMVGの表示が12が逆さまになった ← なんか発生しないので終了とした
H-056: playボタンを２回押すとアニメーションがとびとびになる ← シャロ―コピーしていた
H-040: my-chalk.htmlのupdateではアニメーションが発生しないようにする
H-010: \bar{x} によるバーとのずれ <- ok でも\huge{\bar{x}}がおかしい。でもmathjaxのバグぽいので終了とする

2023/05/26:
H-061: https://viereck.ch/latex-to-svg/をローカルで動かす -> スタイルがやや崩れたが動く -> tex2svg/index.html
H-059: 測定時間を全体のものにする
H-068: エラーを検知する

2023/05/29:
H-060: mvc組み込み

[動画作成調査]
・ffmpeg.wasmがよいらしい
・最悪デスクトップアプリケーションに録画させる(mediaRecorder?)

[アイデア]
curves を stroke として定義したい
curvesArray を strokeArray として定義したい

[作業中]

[優先度高め H-XXX]
H-070: 黒板消しの定義は矩形の定義ですべて決まる
H-069: ちなみにmathjaxが吐いたsvgの文字ごとの間隔寄せは非常に難しい。
    latexにはその設定があるようなのでそれを使った方がいいんじゃないかな？
H-066: Settingsを削除したい
H-068: my-chalk.html を index.html のダイアログとして組み込みたい
H-067: 大きい括弧調査 -> 大きい左括弧 MJX-3-TEX-S3-28, 小さい左括弧 
H-063: \huge{\bar x}でも https://viereck.ch/latex-to-svg/ ならうまく動く -> 最新版だとバグがある？ -> 3.0.0がよい？
H-064: eqnarrayとか文字列をくくることができる https://viereck.ch/latex-to-svg/
H-065: exTopxメソッドを作りたい https://viereck.ch/latex-to-svg/
H-062: vkbeautify.jsを組み込む
H-058: 録画のテスト
H-057: skewのテスト
H-014: 線の太さを変えるロジックを入れても面白いかもしれない
H-053: 文字にランダムにアフィン変換をかます
H-005: 線の太さを考慮した矩形計算
H-006: index.html に元の mathjax が返した svg を表示するようなデバッグ機能が欲しい
  それと併せて svg ファイルの中身も見れるようにしたいところ
  ☑mathjaxで取得したsvgの要素
  ☑mathjaxで取得したsvgの要素の矩形
  ☑mathjaxで取得したkvgの要素
  ☑mathjaxで取得したkvgの要素の矩形
  ☑mathjaxで取得したsvgファイルの中身
H-049: エラーが発生する
\begin{eqnarray}
)\tag{2}
\end{eqnarray}
-> <svg>タグがあるのと今までmatrixを呼んでいなかった
-> svgの子孫要素としてsvgがあり、それにはviewBoxが定義されているが、親のsvgにはviewBoxが定義されていない
-> 改修に時間がかかりそうなのでいったん保留
H-046: 移動距離が長い場合は、手をほんの少し大きくした方がよい
H-047: そもそものtexによる色を変えた場合の対応
H-048: チョークを持った手の画像のチョークの色をそもそも変えられるか？ 
-> 色の変更箇所を定義させる ←これで本当に行ける？色を変えたやつを用意した方がよいんじゃ？
H-034: ラーフルで消す(時間がかかるだけ)
H-041: 大きめのルートと小さめのルートがある気がする
H-029: ReferenceError: MathJax is not definedに対応したい
H-003: Pixel.getAnimationPixelData で曲線(正確には曲線群)の曲率によってスピードを変えたい
H-008: 大きな括弧(大きめの行列や大括弧)に対応しないといけない
H-012:日本語のMVG読み込み対応
  日本語入力したときはpathが取れない？
H-013: アニメーション作成処理はマルチスレッドで行う
H-015: 初期の拡大率調査(※これもう一度調べたい)
  => 現状hugeをつけないと文字サイズが小さい件を調査する 
  => display以外効かないので、もうソフト的に拡大とマージンを設けた
H-016:
・16進数コードから漢字に変換するプログラムを作成する(http://d.hatena.ne.jp/yasuhallabo/20140211/1392131668) -> うまくいっていない(保留)   
  https://gist.github.com/seekseep/e5c289791265dafee786640942ee2e4d -> これでもうまくいかない -> 16進数コードから日本語の復元がうまくいかない
  -> Bufferが使えるのはNodeのみなので、おそらくArrayBufferを使う
H-017: primise error を調べる -> 恐らくfetchの時のerrorをcatchしていないため
H-018: 昔のアプリで出ていた不具合 - kvg読み込みを修正したのできっと直っている
  "備"がエラーが出てしまう 
   -> プロパティ内に半角スペースがあるのが原因かな？
   -> 半角スペースを削除したがダメ
   -> m(小文字)の処理がうまくできていない感じがする

[優先度低め L-XXX]
L-023
・Pixel.getAnimationPixelData で indexesArray を作成しないフラグを設けてもよいかもしれない -> フラグを設ける

L-001
図形のtexはいけない
以下がいけない。texclipではいける。うーん問題だね -> mathjaxは対応していないので、問題ではない
-> いや普通のtexならいける -> なので texが吐き出すdviファイルを利用するのが一番良いのかもしれない
\begin{picture}(40,40)(-20,-20)
  \put(-20,-20){\framebox(40,40){}}% 外見の領域全体を囲む枠
  \put(0,0){\circle*{4}}% 原点の位置
\end{picture}

[memo]
MathJax v3: TeX to SVG 正規のサンプルコード
https://mathjax.github.io/MathJax-demos-web/input-tex2svg.html

MathJaxのよいサンプル見つけた
https://viereck.ch/latex-to-svg/

mathjaxのsvg読み込みのサンプル
https://stackoverflow.com/questions/71031646/write-svg-latex-into-a-canvas-html

https://github.com/davidbau/seedrandom/tree/released
使い方のコピペ
Math.seedrandom('hello.');
console.log(Math.random());          // Always 0.9282578795792454
console.log(Math.random());          // Always 0.3752569768646784

チョーク風サンプル
https://codepen.io/mmoustafa/pen/AXprLM

チョークの色
https://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q12148454412
黒板 rgba(29,84,63,1)
白 rgba(255,255,255,0.85)
黄色 rgba(255,255,146,0.85)
ピンク rgba(247,171,173,0.85)
青 rgba(126,203,220,0.85)

動作確認済み(\ でエラーが出るのであえて未定義の{\bf g}を使用)
\begin{eqnarray}
&&sin(\alpha+\beta)=sin\alpha cos\beta+cos\alpha sin\beta\\
&&cos(\alpha+\beta)=cos\alpha cos\beta-sin\alpha sin\beta\\
&&ax^2+bx+c=0\\
&&x = {-b \pm \sqrt{b^2-4ac} \over 2a}\\
&&Thank{\bf g}you{\bf g}for{\bf g}watching!\\
\end{eqnarray}
